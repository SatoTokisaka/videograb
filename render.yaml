# render.yaml for Videograb

# Define the PostgreSQL database
databases:
  - name: videograb-db
    databaseName: videograb_production
    user: videograb_user

# Define the Redis instance for Sidekiq
services:
  - type: redis
    name: videograb-redis
    ipAllowList: [] # Allow all IPs (default for free tier)
    plan: free

# Define the web service (Rails app)
  - type: web
    name: videograb-web
    env: ruby
    plan: free
    buildCommand: ./render-build.sh
    startCommand: bundle exec rails server -p $PORT -e $RAILS_ENV
    envVars:
      - key: RAILS_ENV
        value: production
      - key: RAILS_MASTER_KEY
        sync: false # You'll set this manually in Render's dashboard
      - key: RAILS_SERVE_STATIC_FILES
        value: true
      - key: DATABASE_URL
        fromDatabase:
          name: videograb-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: videograb-redis
          property: connectionString

# Define the worker service (Sidekiq)
  - type: worker
    name: videograb-worker
    env: ruby
    plan: free
    buildCommand: ./render-build.sh
    startCommand: bundle exec sidekiq
    envVars:
      - key: RAILS_ENV
        value: production
      - key: RAILS_MASTER_KEY
        sync: false # You'll set this manually
      - key: DATABASE_URL
        fromDatabase:
          name: videograb-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: videograb-redis
          property: connectionString